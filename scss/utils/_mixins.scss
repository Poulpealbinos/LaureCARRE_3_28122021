@mixin box-shadow ($color: $light-grey) {
  box-shadow: 0 3px 6px $color;
}

//WEBKIT ET COMPATIBILITE NAV
@mixin gradient-bk($color1: $omf-color-01, $color2: $omf-color-02){
  background: $color1;
  background: -moz-linear-gradient(356deg, $color1 20%, $color2 100%);
  background: -webkit-linear-gradient(356deg, $color1 20%, $color2 100%);
  background: linear-gradient(356deg, $color1 20%, $color2 100%);
}
@mixin border-radius($i1:25px,$side:'all'){
  @if ($side == 'all') {
    -webkit-border-radius: $i1;
    border-radius: $i1;
  } @else if ($side == 'top') {
    -webkit-border-radius: $i1 $i1 0 0;
    border-radius: $i1 $i1 0 0;
  }
}
@mixin transition($name,$duration:0.5,$function:linear) {
  $ds: $duration * 1s;
  -webkit-transition: $name $ds $function;
  -moz-transition: $name $ds $function;
  -ms-transition: $name $ds $function;
  -o-transition: $name $ds $function;
  transition: $name $ds $function;
}
@mixin scale($size:1,$o:null) {
  @if ($o == 'Y'){
    -moz-transform: scaleY(#{$size});
    -webkit-transform: scaleY(#{$size});
    -o-transform: scaleY(#{$size});
    -ms-transform: scaleY(#{$size});
    transform: scaleY(#{$size});
  }
  @else if ($o == 'X'){
    -moz-transform: scaleX(#{$size});
    -webkit-transform: scaleX(#{$size});
    -o-transform: scaleX(#{$size});
    -ms-transform: scaleX(#{$size});
    transform: scaleX(#{$size});
  }
  @else {
    -moz-transform: scale(#{$size});
    -webkit-transform: scale(#{$size});
    -o-transform: scale(#{$size});
    -ms-transform: scale(#{$size});
    transform: scale(#{$size});
  }
}
@mixin rotate($deg:360) {
  $degr: $deg * 1deg;
  -webkit-transform: rotate(#{$degr});
  -ms-transform: rotate(#{$degr});
  -o-transform: rotate(#{$degr});
  transform: rotate(#{$degr});
}

//Num√©rotation auto selon place
@mixin numerotation($nmbElement, $position:after) {
  @for $i from 0 to $nmbElement {
      &:nth-child(#{$i + 1}) {
      &::#{$position}{
        content: "#{$i + 1}";
      }
    }
  }
};
//Fade-in menu
@mixin childFadeIn($nmbElement) {
  @for $i from 0 to $nmbElement {
    &--#{$i+1} {
      animation: fadeIn 1s ease-out #{$i * 0.4}s 1 forwards;
    }
  }
};
//RESPONSIVE
@mixin media-min($key) {
  @media screen and (min-width: map-get($breakpoints, $key)) {
      &{ @content; }
  }
}